{
  "title": "Zamonaviy CSS ning yangi imkoniyatlari",
  "description": "CSS so'nggi yillarda eng ko'p o'sib borayotgan texnologiyalardan biri. CSS taqdim etayotgan yangiliklar sizni hayron qoldirish aniq",
  "published": true,
  "categories": "CSS",
  "body": {
    "raw": "\n[](https://medium.com/@khaitbekdev?source=post_page-----595516a13236--------------------------------)\n\n[Hayitbek Yusupov](https://medium.com/@khaitbekdev?source=post_page-----595516a13236--------------------------------)\n\n2 min read\n\nMar 8, 2023\n\nCSS bugungi kungacha aksariyat dasturchilar uchun qiyin bo’lib kelgan. Bugungi kunda CSS ni zo’r biladiganlar juda-juda kam. Lekin vaqt o’tgani sari, CSS ham zamonaviylashib bormoqda va shu bilan birgalikda o’rganish va ishlatish uchun osonlashib ham bormoqda. Bugun CSS ning yangi imkoniyatlaridan ba’zilarini ko’rib chiqamiz.\n\n# **Inset va aspect-ratio**\n\n```\n.absolute{\n  position:absolute;\n  top:0;\n  right:0;\n  bottom:0;\n  left:0;\n}\n\n.rounded{\n  width:100px;\n  height:100px;\n  border-radius:50%;\n}\n```\n\nXo’sh… Menimcha bu katta ehtimol bilan siz doim odatiy ravishda yozib yuradigan kod, to’g’rimi? Albatta, bu kodning hech qanday yomon joyi yo’q, lekin CSS dagi `inset` va `aspect-ratio` xususiyatlari orqali biz ushbu kodni soddaroq ko’rinishga keltirishimiz mumkin.\n\n```\n.absolute{\n  position:absolute;\n  inset:0; /* top, right, bottom, left -> 0 */\n}\n\n.rounded{\n  width:100px;\n  aspect-ratio:1; /* width, height ikkalasi 100px, agar widthni 150px qilsam height ham 150px bo'ladi */\n  border-radius:50%;\n}\n```\n\n# **min(), max(), clamp() va hokazolar**\n\nOdatda frontendchilar CSS ni o’rganayotganlarida eng birinchilardan bo’lib **container** stillarini tuzishni o’rganadilar va deyarli 99% holatda ularning yozadigan stillari quyidagicha bo’ladi:\n\n```\n.container{\n  width:100%;\n  max-width:1240px;\n  margin:0 auto;\n  padding: 0 20px;\n}\n```\n\nYana qaytaraman, bu kodlarni hech qanday yomon tomoni yo’q, shunchaki ularni yaxshilash mumkin. Keling endi shu kodni soddalashtiramiz:\n\n```\n.container{\n  width:min(100%, 1240px); /* viewport width ga qarab eng kichigini tanlaydi*/\n  margin-inline:auto; /* margin-left va margin-right uchun qisqartma */\n  padding-inline:20px; /* padding-left va padding-right uchun qisqartma */\n}\n```\n\nKodni tahlil qiladigan bo’lsak, **min()** va **max()** funksiyalari o’ziga ikkita qiymat qabul qiladi. **min() viewport width** ga ko’ra ikki qiymatdan eng kichigini tanlasa, **max()** eng kattasini tanlaydi. **margin-inline, padding-inline** lar esa **logical property** deyiladi. Ularga o’xshash propertylar CSS da yetarlicha:\n\n- **margin-inline-start (margin-left)**, **margin-inline-end (margin-right)** va xuddi shu holat **padding** uchun ham mavjud.\n- **margin-block (margin-top** va **margin-bottom), margin-block-start (margin-top), margin-block-end (margin-bottom)** va xuddi shu holat **padding** uchun ham mavjud.\n\n# Responsive tipografiya\n\nCSS dagi yangi **clamp()** funksiyasi orqali responsive typography birmuncha yengillashdi. Biz bu funksiyaga 3 ta qiymat berishimiz kerak:\n\n- eng minimum qiymat\n- boshlang’ich qiymat\n- eng maximum qiymat\n\n```\n.page-title{\n  font-size:clamp(1.5rem, 3rem, 6rem);\n}\n```\n\nKodni tahlil qiladigan bo’lsak, bizda font-size:\n\n- eng kamida **1.5rem** bo’ladi, ya’ni eng minimum qiymat **1.5rem.**\n- boshlang’ich qiymati esa **3rem,** agar boshlang’ich qiymat katta bo’lsa, eng minimum qiymatgacha avtomatik kamayadi, lekin eng minimum qiymatdan pastga o’tmaydi.\n- eng ko’pi bilan **6rem** bo’ladi, ya’ni **6rem** dan katta bo’lib ketmaydi.\n\n**clamp()** ko’p holatlarda ishlatilinishi mumkin, masalan **tipografiya** yoki **margin, paddinglar** uchun.\n\n_Bugungi o’rganganlarimiz haqida batafsil ushbu_ [_havolada_](https://codepen.io/khaitbek/pen/XWPNQxB) _ma’lumot olishingiz mumkin. Bundan tashqari, o’zingiz mustaqil ravishda boshqa manbalardan ham izlanishingiz maqsadga muvofiq._\n",
    "code": "var Component=(()=>{var c=Object.create;var l=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var b=(a,i)=>()=>(i||a((i={exports:{}}).exports,i),i.exports),k=(a,i)=>{for(var r in i)l(a,r,{get:i[r],enumerable:!0})},t=(a,i,r,o)=>{if(i&&typeof i==\"object\"||typeof i==\"function\")for(let e of g(i))!p.call(a,e)&&e!==r&&l(a,e,{get:()=>i[e],enumerable:!(o=m(i,e))||o.enumerable});return a};var y=(a,i,r)=>(r=a!=null?c(u(a)):{},t(i||!a||!a.__esModule?l(r,\"default\",{value:a,enumerable:!0}):r,a)),q=a=>t(l({},\"__esModule\",{value:!0}),a);var h=b((C,d)=>{d.exports=_jsx_runtime});var z={};k(z,{default:()=>f,frontmatter:()=>v});var n=y(h()),v={title:\"Zamonaviy CSS ning yangi imkoniyatlari\",description:\"CSS so'nggi yillarda eng ko'p o'sib borayotgan texnologiyalardan biri. CSS taqdim etayotgan yangiliklar sizni hayron qoldirish aniq\",categories:\"CSS\"};function s(a){let i=Object.assign({p:\"p\",a:\"a\",h1:\"h1\",span:\"span\",strong:\"strong\",pre:\"pre\",code:\"code\",ul:\"ul\",li:\"li\",em:\"em\"},a.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.p,{children:(0,n.jsx)(i.a,{href:\"https://medium.com/@khaitbekdev?source=post_page-----595516a13236--------------------------------\"})}),`\n`,(0,n.jsx)(i.p,{children:(0,n.jsx)(i.a,{href:\"https://medium.com/@khaitbekdev?source=post_page-----595516a13236--------------------------------\",children:\"Hayitbek Yusupov\"})}),`\n`,(0,n.jsx)(i.p,{children:\"2 min read\"}),`\n`,(0,n.jsx)(i.p,{children:\"Mar 8, 2023\"}),`\n`,(0,n.jsx)(i.p,{children:\"CSS bugungi kungacha aksariyat dasturchilar uchun qiyin bo\\u2019lib kelgan. Bugungi kunda CSS ni zo\\u2019r biladiganlar juda-juda kam. Lekin vaqt o\\u2019tgani sari, CSS ham zamonaviylashib bormoqda va shu bilan birgalikda o\\u2019rganish va ishlatish uchun osonlashib ham bormoqda. Bugun CSS ning yangi imkoniyatlaridan ba\\u2019zilarini ko\\u2019rib chiqamiz.\"}),`\n`,(0,n.jsxs)(i.h1,{id:\"inset-va-aspect-ratio\",children:[(0,n.jsx)(i.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#inset-va-aspect-ratio\",children:(0,n.jsx)(i.span,{className:\"icon icon-link\"})}),(0,n.jsx)(i.strong,{children:\"Inset va aspect-ratio\"})]}),`\n`,(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:`.absolute{\n  position:absolute;\n  top:0;\n  right:0;\n  bottom:0;\n  left:0;\n}\n\n.rounded{\n  width:100px;\n  height:100px;\n  border-radius:50%;\n}\n`})}),`\n`,(0,n.jsxs)(i.p,{children:[\"Xo\\u2019sh\\u2026 Menimcha bu katta ehtimol bilan siz doim odatiy ravishda yozib yuradigan kod, to\\u2019g\\u2019rimi? Albatta, bu kodning hech qanday yomon joyi yo\\u2019q, lekin CSS dagi \",(0,n.jsx)(i.code,{children:\"inset\"}),\" va \",(0,n.jsx)(i.code,{children:\"aspect-ratio\"}),\" xususiyatlari orqali biz ushbu kodni soddaroq ko\\u2019rinishga keltirishimiz mumkin.\"]}),`\n`,(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:`.absolute{\n  position:absolute;\n  inset:0; /* top, right, bottom, left -> 0 */\n}\n\n.rounded{\n  width:100px;\n  aspect-ratio:1; /* width, height ikkalasi 100px, agar widthni 150px qilsam height ham 150px bo'ladi */\n  border-radius:50%;\n}\n`})}),`\n`,(0,n.jsxs)(i.h1,{id:\"min-max-clamp-va-hokazolar\",children:[(0,n.jsx)(i.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#min-max-clamp-va-hokazolar\",children:(0,n.jsx)(i.span,{className:\"icon icon-link\"})}),(0,n.jsx)(i.strong,{children:\"min(), max(), clamp() va hokazolar\"})]}),`\n`,(0,n.jsxs)(i.p,{children:[\"Odatda frontendchilar CSS ni o\\u2019rganayotganlarida eng birinchilardan bo\\u2019lib \",(0,n.jsx)(i.strong,{children:\"container\"}),\" stillarini tuzishni o\\u2019rganadilar va deyarli 99% holatda ularning yozadigan stillari quyidagicha bo\\u2019ladi:\"]}),`\n`,(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:`.container{\n  width:100%;\n  max-width:1240px;\n  margin:0 auto;\n  padding: 0 20px;\n}\n`})}),`\n`,(0,n.jsx)(i.p,{children:\"Yana qaytaraman, bu kodlarni hech qanday yomon tomoni yo\\u2019q, shunchaki ularni yaxshilash mumkin. Keling endi shu kodni soddalashtiramiz:\"}),`\n`,(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:`.container{\n  width:min(100%, 1240px); /* viewport width ga qarab eng kichigini tanlaydi*/\n  margin-inline:auto; /* margin-left va margin-right uchun qisqartma */\n  padding-inline:20px; /* padding-left va padding-right uchun qisqartma */\n}\n`})}),`\n`,(0,n.jsxs)(i.p,{children:[\"Kodni tahlil qiladigan bo\\u2019lsak, \",(0,n.jsx)(i.strong,{children:\"min()\"}),\" va \",(0,n.jsx)(i.strong,{children:\"max()\"}),\" funksiyalari o\\u2019ziga ikkita qiymat qabul qiladi. \",(0,n.jsx)(i.strong,{children:\"min() viewport width\"}),\" ga ko\\u2019ra ikki qiymatdan eng kichigini tanlasa, \",(0,n.jsx)(i.strong,{children:\"max()\"}),\" eng kattasini tanlaydi. \",(0,n.jsx)(i.strong,{children:\"margin-inline, padding-inline\"}),\" lar esa \",(0,n.jsx)(i.strong,{children:\"logical property\"}),\" deyiladi. Ularga o\\u2019xshash propertylar CSS da yetarlicha:\"]}),`\n`,(0,n.jsxs)(i.ul,{children:[`\n`,(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:\"margin-inline-start (margin-left)\"}),\", \",(0,n.jsx)(i.strong,{children:\"margin-inline-end (margin-right)\"}),\" va xuddi shu holat \",(0,n.jsx)(i.strong,{children:\"padding\"}),\" uchun ham mavjud.\"]}),`\n`,(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:\"margin-block (margin-top\"}),\" va \",(0,n.jsx)(i.strong,{children:\"margin-bottom), margin-block-start (margin-top), margin-block-end (margin-bottom)\"}),\" va xuddi shu holat \",(0,n.jsx)(i.strong,{children:\"padding\"}),\" uchun ham mavjud.\"]}),`\n`]}),`\n`,(0,n.jsxs)(i.h1,{id:\"responsive-tipografiya\",children:[(0,n.jsx)(i.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#responsive-tipografiya\",children:(0,n.jsx)(i.span,{className:\"icon icon-link\"})}),\"Responsive tipografiya\"]}),`\n`,(0,n.jsxs)(i.p,{children:[\"CSS dagi yangi \",(0,n.jsx)(i.strong,{children:\"clamp()\"}),\" funksiyasi orqali responsive typography birmuncha yengillashdi. Biz bu funksiyaga 3 ta qiymat berishimiz kerak:\"]}),`\n`,(0,n.jsxs)(i.ul,{children:[`\n`,(0,n.jsx)(i.li,{children:\"eng minimum qiymat\"}),`\n`,(0,n.jsx)(i.li,{children:\"boshlang\\u2019ich qiymat\"}),`\n`,(0,n.jsx)(i.li,{children:\"eng maximum qiymat\"}),`\n`]}),`\n`,(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:`.page-title{\n  font-size:clamp(1.5rem, 3rem, 6rem);\n}\n`})}),`\n`,(0,n.jsx)(i.p,{children:\"Kodni tahlil qiladigan bo\\u2019lsak, bizda font-size:\"}),`\n`,(0,n.jsxs)(i.ul,{children:[`\n`,(0,n.jsxs)(i.li,{children:[\"eng kamida \",(0,n.jsx)(i.strong,{children:\"1.5rem\"}),\" bo\\u2019ladi, ya\\u2019ni eng minimum qiymat \",(0,n.jsx)(i.strong,{children:\"1.5rem.\"})]}),`\n`,(0,n.jsxs)(i.li,{children:[\"boshlang\\u2019ich qiymati esa \",(0,n.jsx)(i.strong,{children:\"3rem,\"}),\" agar boshlang\\u2019ich qiymat katta bo\\u2019lsa, eng minimum qiymatgacha avtomatik kamayadi, lekin eng minimum qiymatdan pastga o\\u2019tmaydi.\"]}),`\n`,(0,n.jsxs)(i.li,{children:[\"eng ko\\u2019pi bilan \",(0,n.jsx)(i.strong,{children:\"6rem\"}),\" bo\\u2019ladi, ya\\u2019ni \",(0,n.jsx)(i.strong,{children:\"6rem\"}),\" dan katta bo\\u2019lib ketmaydi.\"]}),`\n`]}),`\n`,(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:\"clamp()\"}),\" ko\\u2019p holatlarda ishlatilinishi mumkin, masalan \",(0,n.jsx)(i.strong,{children:\"tipografiya\"}),\" yoki \",(0,n.jsx)(i.strong,{children:\"margin, paddinglar\"}),\" uchun.\"]}),`\n`,(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.em,{children:\"Bugungi o\\u2019rganganlarimiz haqida batafsil ushbu\"}),\" \",(0,n.jsx)(i.a,{href:\"https://codepen.io/khaitbek/pen/XWPNQxB\",children:(0,n.jsx)(i.em,{children:\"havolada\"})}),\" \",(0,n.jsx)(i.em,{children:\"ma\\u2019lumot olishingiz mumkin. Bundan tashqari, o\\u2019zingiz mustaqil ravishda boshqa manbalardan ham izlanishingiz maqsadga muvofiq.\"})]})]})}function x(a={}){let{wrapper:i}=a.components||{};return i?(0,n.jsx)(i,Object.assign({},a,{children:(0,n.jsx)(s,a)})):s(a)}var f=x;return q(z);})();\n;return Component;"
  },
  "_id": "blog/modern-css-2023.mdx",
  "_raw": {
    "sourceFilePath": "blog/modern-css-2023.mdx",
    "sourceFileName": "modern-css-2023.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/modern-css-2023"
  },
  "type": "Doc",
  "slug": "/blog/modern-css-2023",
  "slugAsParams": "modern-css-2023"
}